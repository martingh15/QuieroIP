{"ast":null,"code":"import merge from \"lodash/merge\";\nimport { RECEIVE_LOGIN, REQUEST_LOGIN, ERROR_LOGIN, CHANGE_LOGIN, CHANGE_USER, RESET_LOGIN, LOGOUT_SUCCESS } from '../actions/AuthenticationActions';\nimport auth from '../api/authentication';\n\nvar assign = Object.assign || require('object.assign'); // The initial application state\n\n\nvar initialState = {\n  usuario: {\n    nombreUsuario: '',\n    password: ''\n  },\n  currentlySending: false,\n  token: auth.loggedIn(),\n  errorMessage: null,\n  idUsuario: auth.idUsuario()\n}; // Takes care of changing the application state\n\nvar authentication = function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LOGIN:\n      return assign({}, state, {\n        usuario: merge({}, state.usuario, action.usuario)\n      });\n\n    case RECEIVE_LOGIN:\n      return assign({}, state, {\n        token: action.token,\n        errorMessage: null,\n        currentlySending: false\n      });\n\n    case REQUEST_LOGIN:\n      return assign({}, state, {\n        currentlySending: action.sending,\n        errorMessage: null\n      });\n\n    case ERROR_LOGIN:\n      return assign({}, state, {\n        errorMessage: action.error,\n        currentlySending: false,\n        token: false\n      });\n\n    case CHANGE_USER:\n      return assign({}, state, {\n        nombreUsuario: action.nombreUsuario\n      });\n\n    case RESET_LOGIN:\n      return assign({}, state, {\n        usuario: {\n          nombreUsuario: '',\n          password: ''\n        },\n        currentlySending: false,\n        token: false,\n        errorMessage: null\n      });\n\n    case LOGOUT_SUCCESS:\n      return assign({}, state, {\n        usuario: {\n          nombreUsuario: '',\n          password: ''\n        },\n        currentlySending: false,\n        token: false,\n        errorMessage: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default authentication;","map":{"version":3,"sources":["/home/mark/Workspace/QuieroIP/src/reducers/authentication.js"],"names":["merge","RECEIVE_LOGIN","REQUEST_LOGIN","ERROR_LOGIN","CHANGE_LOGIN","CHANGE_USER","RESET_LOGIN","LOGOUT_SUCCESS","auth","assign","Object","require","initialState","usuario","nombreUsuario","password","currentlySending","token","loggedIn","errorMessage","idUsuario","authentication","state","action","type","sending","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,cAPJ,QAQO,kCARP;AASA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAP,IAAiBE,OAAO,CAAC,eAAD,CAAvC,C,CAEA;;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAE,EADV;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADQ;AAKjBC,EAAAA,gBAAgB,EAAE,KALD;AAMjBC,EAAAA,KAAK,EAAET,IAAI,CAACU,QAAL,EANU;AAOjBC,EAAAA,YAAY,EAAE,IAPG;AAQjBC,EAAAA,SAAS,EAAEZ,IAAI,CAACY,SAAL;AARM,CAArB,C,CAWA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,YAAL;AACI,aAAOK,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBT,QAAAA,OAAO,EAAEb,KAAK,CAAC,EAAD,EAAKsB,KAAK,CAACT,OAAX,EAAoBU,MAAM,CAACV,OAA3B;AADO,OAAZ,CAAb;;AAGJ,SAAKZ,aAAL;AACI,aAAOQ,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBL,QAAAA,KAAK,EAAEM,MAAM,CAACN,KADO;AAErBE,QAAAA,YAAY,EAAE,IAFO;AAGrBH,QAAAA,gBAAgB,EAAE;AAHG,OAAZ,CAAb;;AAKJ,SAAKd,aAAL;AACI,aAAOO,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBN,QAAAA,gBAAgB,EAAEO,MAAM,CAACE,OADJ;AAErBN,QAAAA,YAAY,EAAE;AAFO,OAAZ,CAAb;;AAIJ,SAAKhB,WAAL;AACI,aAAOM,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBH,QAAAA,YAAY,EAAEI,MAAM,CAACG,KADA;AAErBV,QAAAA,gBAAgB,EAAE,KAFG;AAGrBC,QAAAA,KAAK,EAAE;AAHc,OAAZ,CAAb;;AAKJ,SAAKZ,WAAL;AACI,aAAOI,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBR,QAAAA,aAAa,EAAES,MAAM,CAACT;AADD,OAAZ,CAAb;;AAGJ,SAAKR,WAAL;AACI,aAAOG,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBT,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAE,EAAhB;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SADY;AAErBC,QAAAA,gBAAgB,EAAE,KAFG;AAGrBC,QAAAA,KAAK,EAAE,KAHc;AAIrBE,QAAAA,YAAY,EAAE;AAJO,OAAZ,CAAb;;AAOJ,SAAKZ,cAAL;AACI,aAAOE,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACrBT,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAE,EAAhB;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SADY;AAErBC,QAAAA,gBAAgB,EAAE,KAFG;AAGrBC,QAAAA,KAAK,EAAE,KAHc;AAIrBE,QAAAA,YAAY,EAAE;AAJO,OAAZ,CAAb;;AAMJ;AACI,aAAOG,KAAP;AA1CR;AA4CH,CA7CD;;AA+CA,eAAeD,cAAf","sourcesContent":["import merge from \"lodash/merge\";\nimport {\n    RECEIVE_LOGIN,\n    REQUEST_LOGIN,\n    ERROR_LOGIN,\n    CHANGE_LOGIN,\n    CHANGE_USER,\n    RESET_LOGIN,\n    LOGOUT_SUCCESS\n} from '../actions/AuthenticationActions';\nimport auth from '../api/authentication';\n\nconst assign = Object.assign || require('object.assign');\n\n// The initial application state\nconst initialState = {\n    usuario: {\n        nombreUsuario: '',\n        password: ''\n    },\n    currentlySending: false,\n    token: auth.loggedIn(),\n    errorMessage: null,\n    idUsuario: auth.idUsuario(),\n};\n\n// Takes care of changing the application state\nconst authentication = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_LOGIN:\n            return assign({}, state, {\n                usuario: merge({}, state.usuario, action.usuario),\n            });\n        case RECEIVE_LOGIN:\n            return assign({}, state, {\n                token: action.token,\n                errorMessage: null,\n                currentlySending: false\n            });\n        case REQUEST_LOGIN:\n            return assign({}, state, {\n                currentlySending: action.sending,\n                errorMessage: null,\n            });\n        case ERROR_LOGIN:\n            return assign({}, state, {\n                errorMessage: action.error,\n                currentlySending: false,\n                token: false\n            });\n        case CHANGE_USER:\n            return assign({}, state, {\n                nombreUsuario: action.nombreUsuario\n            });\n        case RESET_LOGIN:\n            return assign({}, state, {\n                usuario: {nombreUsuario: '', password: ''},\n                currentlySending: false,\n                token: false,\n                errorMessage: null,\n\n            });\n        case LOGOUT_SUCCESS:\n            return assign({}, state, {\n                usuario: {nombreUsuario: '', password: ''},\n                currentlySending: false,\n                token: false,\n                errorMessage: null,\n            });\n        default:\n            return state;\n    }\n};\n\nexport default authentication;\n"]},"metadata":{},"sourceType":"module"}